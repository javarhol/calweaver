{
  "version": 3,
  "sources": ["../../../lib/session.ts", "../../../lib/crypto.ts", "../../../lib/util.ts", "../../../lib/google.ts", "../../../functions/oauth/google/callback.ts", "../../../functions/oauth/google/start.ts", "../../../functions/api/byok.ts", "../../../functions/api/me.ts", "../../../functions/api/preferences.ts", "../../../lib/openai.ts", "../../../lib/time.ts", "../../../lib/scheduler.ts", "../../../functions/api/run.ts", "../../../functions/cron/daily.ts", "../pages-NEBjwN/functionsRoutes-0.45917221493972193.mjs", "../../../../../../../opt/homebrew/lib/node_modules/wrangler/node_modules/path-to-regexp/src/index.ts", "../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/pages-template-worker.ts", "../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-EDMqXX/middleware-insertion-facade.js", "../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-EDMqXX/middleware-loader.entry.ts", "../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-Wv5855/middleware-insertion-facade.js", "../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-Wv5855/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/jvarhol2/Documents/calweaver/.wrangler/tmp/dev-VBhSh8",
  "sourcesContent": ["function b64ToBytes(b64: string): Uint8Array {\n  return Uint8Array.from(atob(b64), c => c.charCodeAt(0));\n}\nasync function importHmacKey(b64: string): Promise<CryptoKey> {\n  return crypto.subtle.importKey('raw', b64ToBytes(b64), { name: 'HMAC', hash: 'SHA-256' }, false, ['sign', 'verify']);\n}\nasync function hmac(b64Key: string, data: string): Promise<string> {\n  const key = await importHmacKey(b64Key);\n  const sig = await crypto.subtle.sign('HMAC', key, new TextEncoder().encode(data));\n  const arr = new Uint8Array(sig);\n  let s = \"\"; for (let i=0;i<arr.length;i++) s+=String.fromCharCode(arr[i]);\n  return btoa(s);\n}\n\nexport async function setSession(userId: string, env: Env): Promise<string> {\n  const ts = Date.now().toString();\n  const payload = `${userId}|${ts}`;\n  const sig = await hmac(env.SESSION_SECRET, payload);\n  return `${payload}|${sig}`;\n}\nexport async function getSessionUserId(req: Request, env: Env): Promise<string | null> {\n  const cookie = req.headers.get('Cookie') || '';\n  const m = /cw_session=([^;]+)/.exec(cookie);\n  if (!m) return null;\n  const val = decodeURIComponent(m[1]);\n  const parts = val.split('|');\n  if (parts.length !== 3) return null;\n  const [userId, ts, sig] = parts;\n  const expected = await hmac(env.SESSION_SECRET, `${userId}|${ts}`);\n  if (sig !== expected) return null;\n  return userId;\n}\nexport function sessionCookieHeader(value: string): string {\n  const maxAge = 60 * 60 * 24 * 30;\n  return `cw_session=${encodeURIComponent(value)}; HttpOnly; Secure; Path=/; Max-Age=${maxAge}; SameSite=Lax`;\n}\n\nexport type Env = {\n  DB: D1Database;\n  GOOGLE_CLIENT_ID: string;\n  GOOGLE_CLIENT_SECRET: string;\n  MASTER_ENCRYPTION_KEY: string;\n  SESSION_SECRET: string;\n  OPENAI_API_BASE: string;\n  DEFAULT_MODEL: string;\n}\n", "function b64ToBytes(b64: string): Uint8Array {\n  return Uint8Array.from(atob(b64), c => c.charCodeAt(0));\n}\nfunction bytesToB64(bytes: ArrayBuffer): string {\n  const arr = new Uint8Array(bytes);\n  let s = \"\";\n  for (let i = 0; i < arr.length; i++) s += String.fromCharCode(arr[i]);\n  return btoa(s);\n}\n\nasync function importAesKey(b64: string): Promise<CryptoKey> {\n  const keyBytes = b64ToBytes(b64);\n  return crypto.subtle.importKey('raw', keyBytes, 'AES-GCM', false, ['encrypt','decrypt']);\n}\n\nexport async function encryptAesGcm(plain: string, base64Key: string) {\n  const key = await importAesKey(base64Key);\n  const iv = crypto.getRandomValues(new Uint8Array(12));\n  const enc = new TextEncoder();\n  const ct = await crypto.subtle.encrypt({ name: 'AES-GCM', iv }, key, enc.encode(plain));\n  return { ct: bytesToB64(ct), iv: bytesToB64(iv) };\n}\n\nexport async function decryptAesGcm(ctB64: string, ivB64: string, base64Key: string): Promise<string> {\n  const key = await importAesKey(base64Key);\n  const dec = new TextDecoder();\n  const ct = b64ToBytes(ctB64);\n  const iv = b64ToBytes(ivB64);\n  const pt = await crypto.subtle.decrypt({ name: 'AES-GCM', iv }, key, ct);\n  return dec.decode(pt);\n}\n", "export function nowIso(): string {\n  return new Date().toISOString();\n}\nexport function toEpochSeconds(d: Date): number { return Math.floor(d.getTime() / 1000); }\nexport function fromEpochSeconds(s: number): Date { return new Date(s * 1000); }\nexport function genId(prefix = \"id\"): string {\n  return `${prefix}_${crypto.randomUUID()}`;\n}\nexport function assert(cond: any, msg: string) {\n  if (!cond) throw new Error(msg);\n}\n", "import { decryptAesGcm, encryptAesGcm } from \"./crypto\";\nimport { nowIso } from \"./util\";\n\nexport type GoogleTokens = {\n  access_token: string;\n  expires_in: number;\n  refresh_token?: string;\n  scope: string;\n  token_type: string;\n  id_token?: string;\n};\n\nasync function fetchToken(env: Env, params: Record<string,string>) {\n  const body = new URLSearchParams(params);\n  const res = await fetch('https://oauth2.googleapis.com/token', {\n    method: 'POST',\n    headers: {'Content-Type':'application/x-www-form-urlencoded'},\n    body\n  });\n  if (!res.ok) throw new Error(`Token exchange failed: ${res.status} ${await res.text()}`);\n  return res.json<GoogleTokens>();\n}\n\nexport async function exchangeAuthCodeForTokens(code: string, redirectUri: string, env: Env) {\n  return fetchToken(env, {\n    code,\n    client_id: env.GOOGLE_CLIENT_ID,\n    client_secret: env.GOOGLE_CLIENT_SECRET,\n    redirect_uri: redirectUri,\n    grant_type: 'authorization_code'\n  });\n}\n\nexport async function refreshAccessToken(refreshToken: string, env: Env) {\n  return fetchToken(env, {\n    refresh_token: refreshToken,\n    client_id: env.GOOGLE_CLIENT_ID,\n    client_secret: env.GOOGLE_CLIENT_SECRET,\n    grant_type: 'refresh_token'\n  });\n}\n\nasync function storeTokens(userId: string, tokens: GoogleTokens, env: Env) {\n  const now = Math.floor(Date.now()/1000);\n  const accessExpiry = now + (tokens.expires_in ?? 3600) - 60;\n  const { ct: atEnc, iv: atIv } = await encryptAesGcm(tokens.access_token, env.MASTER_ENCRYPTION_KEY);\n  let rtEnc = null, rtIv = null;\n  if (tokens.refresh_token) {\n    const enc = await encryptAesGcm(tokens.refresh_token, env.MASTER_ENCRYPTION_KEY);\n    rtEnc = enc.ct; rtIv = enc.iv;\n  }\n  await env.DB.prepare(`\n    INSERT INTO users (id, google_access_token_enc, google_access_iv, google_access_expiry, google_refresh_token_enc, google_refresh_iv, created_at, updated_at)\n    VALUES (?1, ?2, ?3, ?4, COALESCE(?5, google_refresh_token_enc), COALESCE(?6, google_refresh_iv), ?7, ?7)\n    ON CONFLICT(id) DO UPDATE SET\n      google_access_token_enc=excluded.google_access_token_enc,\n      google_access_iv=excluded.google_access_iv,\n      google_access_expiry=excluded.google_access_expiry,\n      google_refresh_token_enc=COALESCE(excluded.google_refresh_token_enc, users.google_refresh_token_enc),\n      google_refresh_iv=COALESCE(excluded.google_refresh_iv, users.google_refresh_iv),\n      updated_at=excluded.updated_at\n  `).bind(userId, atEnc, atIv, accessExpiry, rtEnc, rtIv, nowIso()).run();\n}\n\nexport async function upsertUserIdentity(userId: string, email: string, name: string | undefined, env: Env) {\n  await env.DB.prepare(`\n    INSERT INTO users (id, email, name, created_at, updated_at)\n    VALUES (?1, ?2, ?3, ?4, ?4)\n    ON CONFLICT(id) DO UPDATE SET email=excluded.email, name=excluded.name, updated_at=excluded.updated_at\n  `).bind(userId, email, name || null, nowIso()).run();\n}\n\nexport async function getUser(env: Env, userId: string) {\n  const row = await env.DB.prepare('SELECT * FROM users WHERE id=?1').bind(userId).first();\n  return row || null;\n}\n\nexport async function ensureAccessToken(env: Env, userId: string): Promise<string> {\n  const row = await getUser(env, userId);\n  if (!row) throw new Error('User not found');\n  const now = Math.floor(Date.now()/1000);\n  let access = row.google_access_token_enc ? await decryptAesGcm(row.google_access_token_enc, row.google_access_iv, env.MASTER_ENCRYPTION_KEY) : null;\n  if (!access || row.google_access_expiry < now) {\n    const refresh = row.google_refresh_token_enc ? await decryptAesGcm(row.google_refresh_token_enc, row.google_refresh_iv, env.MASTER_ENCRYPTION_KEY) : null;\n    if (!refresh) throw new Error('Missing refresh token');\n    const tokens = await refreshAccessToken(refresh, env);\n    await storeTokens(row.id, { ...tokens, refresh_token: refresh }, env);\n    access = tokens.access_token;\n  }\n  return access!;\n}\n\nexport async function googleFetch(env: Env, userId: string, url: string, init: RequestInit = {}) {\n  const access = await ensureAccessToken(env, userId);\n  const res = await fetch(url, {\n    ...init,\n    headers: {\n      ...(init.headers || {}),\n      'Authorization': `Bearer ${access}`,\n      'Content-Type': (init as any).body ? 'application/json' : (init.headers as any)?.['Content-Type'] || undefined\n    }\n  });\n  if (!res.ok) {\n    const txt = await res.text();\n    throw new Error(`Google API ${res.status}: ${txt}`);\n  }\n  return res;\n}\n\nexport async function getUserInfo(accessToken: string) {\n  const res = await fetch('https://www.googleapis.com/oauth2/v3/userinfo', {\n    headers: { 'Authorization': `Bearer ${accessToken}` }\n  });\n  if (!res.ok) throw new Error('Failed userinfo');\n  return res.json<{ sub: string; email: string; name?: string }>();\n}\n\nexport async function ensurePreferences(env: Env, userId: string) {\n  const p = await env.DB.prepare('SELECT * FROM preferences WHERE user_id=?1').bind(userId).first();\n  if (p) return p;\n  await env.DB.prepare(`\n    INSERT INTO preferences (user_id, created_at, updated_at) VALUES (?1, ?2, ?2)\n  `).bind(userId, nowIso()).run();\n  return await env.DB.prepare('SELECT * FROM preferences WHERE user_id=?1').bind(userId).first();\n}\n\nexport async function listTaskLists(env: Env, userId: string) {\n  const res = await googleFetch(env, userId, 'https://tasks.googleapis.com/tasks/v1/users/@me/lists');\n  const data = await res.json<any>();\n  return data.items || [];\n}\nexport async function listIncompleteTasks(env: Env, userId: string, listIds?: string[]) {\n  const lists = listIds && listIds.length ? listIds : (await listTaskLists(env, userId)).map((l:any)=>l.id);\n  const tasks: any[] = [];\n  for (const id of lists) {\n    const res = await googleFetch(env, userId, `https://tasks.googleapis.com/tasks/v1/lists/${encodeURIComponent(id)}/tasks?showCompleted=false&showDeleted=false`);\n    const data = await res.json<any>();\n    if (data.items) {\n      for (const t of data.items) {\n        if (t.status !== 'completed') tasks.push({ ...t, listId: id });\n      }\n    }\n  }\n  return tasks;\n}\n\nexport async function listSelectedCalendars(env: Env, userId: string) {\n  const res = await googleFetch(env, userId, 'https://www.googleapis.com/calendar/v3/users/me/calendarList?minAccessRole=reader');\n  const data = await res.json<any>();\n  const items = (data.items || []).filter((c:any)=>c.selected);\n  return items;\n}\n\nexport async function getTimezone(env: Env, userId: string) {\n  const res = await googleFetch(env, userId, 'https://www.googleapis.com/calendar/v3/users/me/settings/timezone');\n  const data = await res.json<any>();\n  return data.value || 'UTC';\n}\n\nexport async function ensureFocusCalendar(env: Env, userId: string): Promise<string> {\n  let pref = await ensurePreferences(env, userId);\n  if (pref.calendar_id) return pref.calendar_id;\n  const res = await googleFetch(env, userId, 'https://www.googleapis.com/calendar/v3/users/me/calendarList');\n  const list = await res.json<any>();\n  const found = (list.items || []).find((c:any) => c.summary === 'CalWeaver Focus');\n  let calId: string;\n  if (found) {\n    calId = found.id;\n  } else {\n    const create = await googleFetch(env, userId, 'https://www.googleapis.com/calendar/v3/calendars', {\n      method: 'POST',\n      body: JSON.stringify({ summary: 'CalWeaver Focus' })\n    });\n    const created = await create.json<any>();\n    calId = created.id;\n  }\n  await env.DB.prepare('UPDATE preferences SET calendar_id=?1, updated_at=?2 WHERE user_id=?3')\n    .bind(calId, nowIso(), userId).run();\n  return calId;\n}\n\nexport async function freeBusy(env: Env, userId: string, timeMin: string, timeMax: string, calendars: string[]) {\n  const body = {\n    timeMin, timeMax,\n    items: calendars.map(id => ({ id }))\n  };\n  const res = await googleFetch(env, userId, 'https://www.googleapis.com/calendar/v3/freeBusy', {\n    method: 'POST',\n    body: JSON.stringify(body)\n  });\n  const data = await res.json<any>();\n  const busy: Array<{ start: Date; end: Date }> = [];\n  for (const id of calendars) {\n    const cal = data.calendars[id];\n    if (cal && cal.busy) {\n      for (const b of cal.busy) busy.push({ start: new Date(b.start), end: new Date(b.end) });\n    }\n  }\n  busy.sort((a,b)=>a.start.getTime() - b.start.getTime());\n  return busy;\n}\n\nexport async function listEvents(env: Env, userId: string, calendarId: string, timeMin: string, timeMax: string) {\n  const res = await googleFetch(env, userId, `https://www.googleapis.com/calendar/v3/calendars/${encodeURIComponent(calendarId)}/events?singleEvents=true&orderBy=startTime&timeMin=${encodeURIComponent(timeMin)}&timeMax=${encodeURIComponent(timeMax)}`);\n  const data = await res.json<any>();\n  return data.items || [];\n}\n\nexport async function insertEvent(env: Env, userId: string, calendarId: string, event: any) {\n  const res = await googleFetch(env, userId, `https://www.googleapis.com/calendar/v3/calendars/${encodeURIComponent(calendarId)}/events`, {\n    method: 'POST',\n    body: JSON.stringify(event)\n  });\n  return res.json<any>();\n}\n\nexport async function deleteEvent(env: Env, userId: string, calendarId: string, eventId: string) {\n  await googleFetch(env, userId, `https://www.googleapis.com/calendar/v3/calendars/${encodeURIComponent(calendarId)}/events/${encodeURIComponent(eventId)}`, { method: 'DELETE' });\n}\n\nexport type Env = import('./session').Env;\n", "import { Env, sessionCookieHeader, setSession } from \"../../../lib/session\";\nimport { exchangeAuthCodeForTokens, getTimezone, getUserInfo, upsertUserIdentity } from \"../../../lib/google\";\nimport { nowIso } from \"../../../lib/util\";\nimport { encryptAesGcm } from \"../../../lib/crypto\";\n\nexport const onRequestGet: PagesFunction<Env> = async (context) => {\n  const { request, env } = context;\n  const url = new URL(request.url);\n  const code = url.searchParams.get('code');\n  const state = url.searchParams.get('state');\n  const cookie = request.headers.get('Cookie') || '';\n  const m = /oauth_state=([^;]+)/.exec(cookie);\n  const cookieState = m ? decodeURIComponent(m[1]) : null;\n  if (!code || !state || state !== cookieState) {\n    return new Response('Invalid OAuth state', { status: 400 });\n  }\n  const redirectUri = new URL('/oauth/google/callback', url.origin).toString();\n  const tokens = await exchangeAuthCodeForTokens(code, redirectUri, env);\n\n  // Get user info\n  const userinfo = await getUserInfo(tokens.access_token);\n  await upsertUserIdentity(userinfo.sub, userinfo.email, userinfo.name, env);\n\n  // Store tokens encrypted\n  const now = nowIso();\n  const at = await encryptAesGcm(tokens.access_token, env.MASTER_ENCRYPTION_KEY);\n  const rt = tokens.refresh_token ? await encryptAesGcm(tokens.refresh_token, env.MASTER_ENCRYPTION_KEY) : null;\n  const accessExpiry = Math.floor(Date.now()/1000) + (tokens.expires_in || 3600) - 60;\n  await env.DB.prepare(`\n    INSERT INTO users (id, email, name, google_access_token_enc, google_access_iv, google_access_expiry, google_refresh_token_enc, google_refresh_iv, created_at, updated_at)\n    VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?9)\n    ON CONFLICT(id) DO UPDATE SET email=excluded.email, name=excluded.name, google_access_token_enc=excluded.google_access_token_enc, google_access_iv=excluded.google_access_iv, google_access_expiry=excluded.google_access_expiry, google_refresh_token_enc=COALESCE(excluded.google_refresh_token_enc, users.google_refresh_token_enc), google_refresh_iv=COALESCE(excluded.google_refresh_iv, users.google_refresh_iv), updated_at=excluded.updated_at\n  `).bind(userinfo.sub, userinfo.email, userinfo.name || null, at.ct, at.iv, accessExpiry, rt?.ct || null, rt?.iv || null, now).run();\n\n  // Try to capture timezone\n  try {\n    const tz = await getTimezone(env, userinfo.sub);\n    await env.DB.prepare('UPDATE users SET tz=?1, updated_at=?2 WHERE id=?3').bind(tz, now, userinfo.sub).run();\n  } catch {}\n\n  const sess = await setSession(userinfo.sub, env);\n  return new Response(null, { status: 302, headers: { Location: '/', 'Set-Cookie': sessionCookieHeader(sess) } });\n};\n", "import { Env } from \"../../../lib/session\";\n\nexport const onRequestGet: PagesFunction<Env> = async (context) => {\n  const { request, env } = context;\n  const url = new URL(request.url);\n  const redirectUri = new URL('/oauth/google/callback', url.origin).toString();\n\n  const state = crypto.randomUUID();\n  const setState = `oauth_state=${state}; HttpOnly; Secure; Path=/; Max-Age=600; SameSite=Lax`;\n\n  const scope = [\n    'openid','email','profile',\n    'https://www.googleapis.com/auth/tasks.readonly',\n    'https://www.googleapis.com/auth/calendar'\n  ].join(' ');\n\n  const authUrl = new URL('https://accounts.google.com/o/oauth2/v2/auth');\n  authUrl.searchParams.set('client_id', env.GOOGLE_CLIENT_ID);\n  authUrl.searchParams.set('redirect_uri', redirectUri);\n  authUrl.searchParams.set('response_type', 'code');\n  authUrl.searchParams.set('scope', scope);\n  authUrl.searchParams.set('access_type', 'offline');\n  authUrl.searchParams.set('prompt', 'consent');\n  authUrl.searchParams.set('include_granted_scopes', 'true');\n  authUrl.searchParams.set('state', state);\n\n  return new Response(null, {\n    status: 302,\n    headers: { Location: authUrl.toString(), 'Set-Cookie': setState }\n  });\n};\n", "import { Env, getSessionUserId } from \"../../lib/session\";\nimport { encryptAesGcm } from \"../../lib/crypto\";\nimport { nowIso } from \"../../lib/util\";\n\nexport const onRequestPost: PagesFunction<Env> = async ({ request, env }) => {\n  const userId = await getSessionUserId(request, env);\n  if (!userId) return new Response('Unauthorized', { status: 401 });\n  const { key } = await request.json<any>();\n  if (!key || !/^sk-/.test(key)) return new Response('Invalid key', { status: 400 });\n  const enc = await encryptAesGcm(key, env.MASTER_ENCRYPTION_KEY);\n  await env.DB.prepare(`\n    INSERT INTO openai_keys (user_id, key_enc, key_iv, created_at)\n    VALUES (?1, ?2, ?3, ?4)\n    ON CONFLICT(user_id) DO UPDATE SET key_enc=excluded.key_enc, key_iv=excluded.key_iv\n  `).bind(userId, enc.ct, enc.iv, nowIso()).run();\n  return new Response(JSON.stringify({ ok: true }), { headers: { 'Content-Type':'application/json' } });\n};\n\nexport const onRequestDelete: PagesFunction<Env> = async ({ request, env }) => {\n  const userId = await getSessionUserId(request, env);\n  if (!userId) return new Response('Unauthorized', { status: 401 });\n  await env.DB.prepare('DELETE FROM openai_keys WHERE user_id=?1').bind(userId).run();\n  return new Response(JSON.stringify({ ok: true }), { headers: { 'Content-Type':'application/json' } });\n};\n", "import { Env, getSessionUserId } from \"../../lib/session\";\nimport { getUser } from \"../../lib/google\";\n\nexport const onRequestGet: PagesFunction<Env> = async (context) => {\n  const { request, env } = context;\n  const userId = await getSessionUserId(request, env);\n  if (!userId) return new Response(JSON.stringify({ connected: false }), { status: 200, headers: { 'Content-Type':'application/json' } });\n  const user = await getUser(env, userId);\n  const byok = await env.DB.prepare('SELECT 1 FROM openai_keys WHERE user_id=?1').bind(userId).first();\n  return new Response(JSON.stringify({\n    connected: true,\n    email: user?.email,\n    tz: user?.tz,\n    byok: !!byok\n  }), { headers: { 'Content-Type':'application/json' } });\n};\n", "import { Env, getSessionUserId } from \"../../lib/session\";\nimport { ensurePreferences } from \"../../lib/google\";\nimport { nowIso } from \"../../lib/util\";\n\nexport const onRequestGet: PagesFunction<Env> = async ({ request, env }) => {\n  const userId = await getSessionUserId(request, env);\n  if (!userId) return new Response('Unauthorized', { status: 401 });\n  const pref = await ensurePreferences(env, userId);\n  return new Response(JSON.stringify(pref), { headers: { 'Content-Type':'application/json' } });\n};\n\nexport const onRequestPost: PagesFunction<Env> = async ({ request, env }) => {\n  const userId = await getSessionUserId(request, env);\n  if (!userId) return new Response('Unauthorized', { status: 401 });\n  const body = await request.json<any>();\n  const now = nowIso();\n  await env.DB.prepare(`\n    UPDATE preferences SET\n      horizon_days=COALESCE(?1, horizon_days),\n      working_start=COALESCE(?2, working_start),\n      working_end=COALESCE(?3, working_end),\n      min_block=COALESCE(?4, min_block),\n      max_block=COALESCE(?5, max_block),\n      buffer_minutes=COALESCE(?6, buffer_minutes),\n      max_daily_focus=COALESCE(?7, max_daily_focus),\n      updated_at=?8\n    WHERE user_id=?9\n  `).bind(\n    body.horizon_days ?? null,\n    body.working_start ?? null,\n    body.working_end ?? null,\n    body.min_block ?? null,\n    body.max_block ?? null,\n    body.buffer_minutes ?? null,\n    body.max_daily_focus ?? null,\n    now,\n    userId\n  ).run();\n  const pref = await ensurePreferences(env, userId);\n  return new Response(JSON.stringify(pref), { headers: { 'Content-Type':'application/json' } });\n};\n", "import { decryptAesGcm } from \"./crypto\";\n\nexport async function getOpenAIKey(env: Env, userId: string): Promise<string | null> {\n  const row = await env.DB.prepare('SELECT key_enc, key_iv FROM openai_keys WHERE user_id=?1').bind(userId).first();\n  if (!row) return null;\n  return await decryptAesGcm(row.key_enc, row.key_iv, env.MASTER_ENCRYPTION_KEY);\n}\n\nexport async function estimateTasks(env: Env, userId: string, tasks: any[]): Promise<Array<{\n  id: string, title: string, notes?: string, due?: string,\n  durationMinutes: number, chunkMinutes: number, priority: number\n}>> {\n  const key = await getOpenAIKey(env, userId);\n  if (!key) throw new Error('No OpenAI key stored.');\n  if (!tasks.length) return [];\n  const truncated = tasks.slice(0, 50); // safety\n  const prompt = `\nYou estimate task attributes. For each task, output JSON object with:\n{id, durationMinutes, chunkMinutes, priority}\nRules:\n- durationMinutes \u2208 [15, 480]\n- chunkMinutes \u2208 [15, 120]\n- priority \u2208 [1 (low) .. 5 (high)]\n- If due is near (within 48h), bump priority.\nHere are tasks:\n${truncated.map(t => `- id:${t.id} title:${t.title} notes:${(t.notes||'').slice(0,200)} due:${t.due || 'none'}`).join('\\n')}\nReturn ONLY an array of JSON objects.\n  `.trim();\n\n  const res = await fetch((env.OPENAI_API_BASE || 'https://api.openai.com/v1') + '/chat/completions', {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${key}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      model: env.DEFAULT_MODEL || 'gpt-4o-mini',\n      messages: [\n        { role: 'system', content: 'You return concise, valid JSON only.' },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.2,\n      max_tokens: 800\n    })\n  });\n  if (!res.ok) throw new Error(`OpenAI error: ${res.status} ${await res.text()}`);\n  const data = await res.json<any>();\n  const text = data.choices?.[0]?.message?.content?.trim() || '[]';\n  let jsonText = text.replace(/```json|```/g, '');\n  let arr: any[] = [];\n  try { arr = JSON.parse(jsonText); } catch {\n    // fallback heuristic if parsing fails\n    return truncated.map((t:any) => ({\n      id: t.id, title: t.title, notes: t.notes, due: t.due,\n      durationMinutes: Math.min(240, Math.max(30, (t.title || '').length * 2)),\n      chunkMinutes: 50, priority: 3\n    }));\n  }\n  const map = new Map(truncated.map((t:any)=>[t.id,t]));\n  const clamp = (v:number,min:number,max:number)=>Math.max(min,Math.min(max,Math.round(v)));\n  return arr.map((o:any) => {\n    const base = map.get(o.id);\n    return {\n      id: o.id,\n      title: base?.title || '',\n      notes: base?.notes,\n      due: base?.due,\n      durationMinutes: clamp(o.durationMinutes ?? 60, 15, 480),\n      chunkMinutes: clamp(o.chunkMinutes ?? 50, 15, 120),\n      priority: clamp(o.priority ?? 3, 1, 5)\n    };\n  });\n}\n\nexport type Env = import('./session').Env;\n", "export function parseHM(hm: string): {h:number,m:number} {\n  const [h,m] = hm.split(':').map(Number);\n  return {h, m: m ?? 0};\n}\nexport function startOfDay(date: Date): Date {\n  const d = new Date(date); d.setHours(0,0,0,0); return d;\n}\nexport function endOfDay(date: Date): Date {\n  const d = new Date(date); d.setHours(23,59,59,999); return d;\n}\nexport function addMinutes(d: Date, mins: number): Date {\n  return new Date(d.getTime() + mins*60000);\n}\nexport function overlap(a1: Date, a2: Date, b1: Date, b2: Date): boolean {\n  return a1 < b2 && b1 < a2;\n}\nexport function weekdayStr(d: Date): string {\n  return ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][d.getDay()];\n}\nexport function clampToWorkday(d1: Date, d2: Date, startHM: string, endHM: string, tz: string): {s: Date, e: Date} {\n  // For MVP, assume server local time equals user tz (Workers run UTC; we treat times as ISO strings with tz offset from Google)\n  return { s: d1, e: d2 };\n}\n", "import { addMinutes } from \"./time\";\n\nexport type Prefs = {\n  horizon_days: number;\n  working_start: string; // \"HH:MM\"\n  working_end: string;   // \"HH:MM\"\n  workdays?: string[];   // [\"Mon\",...]\n  min_block: number;\n  max_block: number;\n  buffer_minutes: number;\n  max_daily_focus: number;\n  include_weekends?: number;\n};\n\nexport type TaskEst = {\n  id: string;\n  title: string;\n  due?: string;\n  durationMinutes: number;\n  chunkMinutes: number;\n  priority: number;\n};\n\nexport type Interval = { start: Date; end: Date };\n\nfunction mergeIntervals(intervals: Interval[]): Interval[] {\n  if (!intervals.length) return [];\n  intervals.sort((a,b)=>a.start.getTime()-b.start.getTime());\n  const out: Interval[] = [intervals[0]];\n  for (let i=1;i<intervals.length;i++) {\n    const prev = out[out.length-1];\n    const cur = intervals[i];\n    if (cur.start <= prev.end) {\n      if (cur.end > prev.end) prev.end = cur.end;\n    } else {\n      out.push({ start: cur.start, end: cur.end });\n    }\n  }\n  return out;\n}\n\nfunction subtractBusyFromWorkday(dayStart: Date, dayEnd: Date, busy: Interval[]): Interval[] {\n  const free: Interval[] = [];\n  let cursor = new Date(dayStart);\n  for (const b of busy) {\n    if (b.end <= cursor) continue;\n    if (b.start > cursor) {\n      free.push({ start: new Date(cursor), end: new Date(Math.min(b.start.getTime(), dayEnd.getTime())) });\n    }\n    cursor = new Date(Math.max(cursor.getTime(), b.end.getTime()));\n    if (cursor >= dayEnd) break;\n  }\n  if (cursor < dayEnd) free.push({ start: cursor, end: dayEnd });\n  return free.filter(f => f.end > f.start);\n}\n\nexport function computeFreeSlots(horizonStart: Date, horizonDays: number, tz: string, prefs: Prefs, busyAll: Interval[]): Array<{day: Date, slots: Interval[]}> {\n  const result: Array<{day: Date, slots: Interval[]}> = [];\n  const workdays = prefs.workdays || ['Mon','Tue','Wed','Thu','Fri'];\n  for (let d=0; d<horizonDays; d++) {\n    const day = new Date(horizonStart.getTime() + d*86400000);\n    const wd = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][day.getDay()];\n    if (!prefs.include_weekends && !workdays.includes(wd)) {\n      result.push({ day, slots: [] });\n      continue;\n    }\n    const [sh, sm] = (prefs.working_start||'09:00').split(':').map(Number);\n    const [eh, em] = (prefs.working_end||'17:00').split(':').map(Number);\n    const dayStart = new Date(day); dayStart.setHours(sh||9, sm||0, 0, 0);\n    const dayEnd = new Date(day); dayEnd.setHours(eh||17, em||0, 0, 0);\n\n    const todaysBusy = busyAll.filter(b => b.start < dayEnd && b.end > dayStart).map(b => ({\n      start: new Date(Math.max(b.start.getTime(), dayStart.getTime())),\n      end: new Date(Math.min(b.end.getTime(), dayEnd.getTime()))\n    }));\n    const merged = mergeIntervals(todaysBusy);\n    const free = subtractBusyFromWorkday(dayStart, dayEnd, merged);\n    result.push({ day, slots: free });\n  }\n  return result;\n}\n\nexport function planTasksIntoSlots(tasks: TaskEst[], slotsByDay: Array<{day: Date, slots: Interval[]}>, prefs: Prefs, tz: string): Array<{ taskId: string, start: Date, end: Date, chunkIndex: number, chunkCount: number }> {\n  const scored = tasks.map(t => {\n    let urgency = 0;\n    if (t.due) {\n      const due = new Date(t.due);\n      urgency = Math.max(0, (7*86400000 - (due.getTime() - Date.now())) / 86400000);\n    }\n    return { t, score: t.priority * 10 + urgency };\n  }).sort((a,b)=>b.score - a.score).map(x=>x.t);\n\n  const placements: Array<{ taskId: string, start: Date, end: Date, chunkIndex: number, chunkCount: number }> = [];\n  const perDayFocusUsed = new Map<number, number>();\n\n  for (const task of scored) {\n    const total = task.durationMinutes;\n    const chunk = Math.max(prefs.min_block, Math.min(prefs.max_block, task.chunkMinutes));\n    let remain = total;\n    let chunkIndex = 0;\n    const chunkCount = Math.ceil(total / chunk);\n\n    for (let dayIdx=0; dayIdx<slotsByDay.length && remain > 0; dayIdx++) {\n      const day = slotsByDay[dayIdx];\n      const dayEpoch = new Date(day.day.getFullYear(), day.day.getMonth(), day.day.getDate()).getTime();\n      const used = perDayFocusUsed.get(dayEpoch) || 0;\n      const remainingCapacity = Math.max(0, prefs.max_daily_focus - used);\n      if (remainingCapacity < prefs.min_block) continue;\n\n      for (let sIdx=0; sIdx<day.slots.length && remain > 0; sIdx++) {\n        const slot = day.slots[sIdx];\n        let cursor = new Date(slot.start);\n        while (cursor < slot.end && remain > 0) {\n          const already = perDayFocusUsed.get(dayEpoch) || 0;\n          const thisChunk = Math.min(chunk, remain, prefs.max_daily_focus - already);\n          if (thisChunk < prefs.min_block) break;\n\n          const end = addMinutes(cursor, thisChunk);\n          if (end > slot.end) break;\n\n          placements.push({ taskId: task.id, start: new Date(cursor), end, chunkIndex: chunkIndex+1, chunkCount });\n          perDayFocusUsed.set(dayEpoch, already + thisChunk);\n          remain -= thisChunk;\n          chunkIndex++;\n          cursor = end;\n        }\n      }\n    }\n  }\n\n  return placements;\n}\n", "import { Env, getSessionUserId } from \"../../lib/session\";\nimport { ensureFocusCalendar, freeBusy, insertEvent, listEvents, listIncompleteTasks, listSelectedCalendars, deleteEvent } from \"../../lib/google\";\nimport { estimateTasks } from \"../../lib/openai\";\nimport { computeFreeSlots, planTasksIntoSlots } from \"../../lib/scheduler\";\nimport { genId, nowIso } from \"../../lib/util\";\n\nexport const onRequestPost: PagesFunction<Env> = async ({ request, env }) => {\n  const userId = await getSessionUserId(request, env);\n  if (!userId) return new Response('Unauthorized', { status: 401 });\n\n  const pref = await env.DB.prepare('SELECT * FROM preferences WHERE user_id=?1').bind(userId).first();\n  const horizonDays = pref?.horizon_days ?? 7;\n  const tz = (await env.DB.prepare('SELECT tz FROM users WHERE id=?1').bind(userId).first())?.tz || 'UTC';\n\n  // Horizon window: today 00:00 to horizon end\n  const now = new Date();\n  const horizonStart = new Date(now); horizonStart.setHours(0,0,0,0);\n  const horizonEnd = new Date(horizonStart.getTime() + horizonDays*86400000);\n\n  // Ensure focus calendar\n  const calId = await ensureFocusCalendar(env, userId);\n\n  // Delete previous CalWeaver events in horizon (in that calendar)\n  const events = await listEvents(env, userId, calId, horizonStart.toISOString(), horizonEnd.toISOString());\n  for (const e of events) {\n    await deleteEvent(env, userId, calId, e.id);\n  }\n\n  // Build busy intervals from all selected calendars (excluding our focus calendar)\n  const calendars = (await listSelectedCalendars(env, userId))\n    .map((c:any)=>c.id)\n    .filter((id:string)=>id !== calId);\n  const busy = await freeBusy(env, userId, horizonStart.toISOString(), horizonEnd.toISOString(), calendars);\n\n  // Apply buffers\n  const buffer = pref?.buffer_minutes ?? 10;\n  const busyBuffered = busy.map(b => ({\n    start: new Date(b.start.getTime() - buffer*60000),\n    end: new Date(b.end.getTime() + buffer*60000)\n  }));\n\n  // Pull tasks\n  const tasks = await listIncompleteTasks(env, userId, pref?.tasks_list_ids ? JSON.parse(pref.tasks_list_ids) : undefined);\n  const normalized = tasks.map((t:any) => ({\n    id: t.id,\n    title: t.title || '(untitled)',\n    notes: t.notes || '',\n    due: t.due?.dateTime || t.due?.date || null\n  }));\n\n  // Estimate durations & priorities\n  const est = await estimateTasks(env, userId, normalized);\n\n  // Compute free slots\n  const slotsByDay = computeFreeSlots(horizonStart, horizonDays, tz, {\n    horizon_days: horizonDays,\n    working_start: pref?.working_start || '09:00',\n    working_end: pref?.working_end || '17:00',\n    min_block: pref?.min_block || 25,\n    max_block: pref?.max_block || 90,\n    buffer_minutes: buffer,\n    max_daily_focus: pref?.max_daily_focus || 240,\n    include_weekends: pref?.include_weekends ?? 0\n  }, busyBuffered);\n\n  // Plan placements\n  const placements = planTasksIntoSlots(est, slotsByDay, {\n    horizon_days: horizonDays,\n    working_start: pref?.working_start || '09:00',\n    working_end: pref?.working_end || '17:00',\n    min_block: pref?.min_block || 25,\n    max_block: pref?.max_block || 90,\n    buffer_minutes: buffer,\n    max_daily_focus: pref?.max_daily_focus || 240,\n    include_weekends: pref?.include_weekends ?? 0\n  }, tz);\n\n  // Create events\n  const runId = genId('run');\n  let scheduled = 0;\n  for (const p of placements) {\n    const t = est.find(x => x.id === p.taskId)!;\n    const summary = `Focus: ${t.title}`;\n    const event = {\n      summary,\n      description: `CalWeaver focus block\\nTask: ${t.title}\\nChunk ${p.chunkIndex}/${p.chunkCount}`,\n      start: { dateTime: p.start.toISOString() },\n      end: { dateTime: p.end.toISOString() },\n      extendedProperties: { private: { calweaver: \"1\", taskId: t.id, runId } }\n    };\n    const created = await insertEvent(env, userId, calId, event);\n    await env.DB.prepare(`\n      INSERT INTO scheduled_blocks (id, user_id, task_id, start, end, calendar_event_id, run_id, created_at)\n      VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8)\n    `).bind(genId('blk'), userId, t.id, p.start.toISOString(), p.end.toISOString(), created.id, runId, nowIso()).run();\n    scheduled++;\n  }\n\n  // Record run\n  await env.DB.prepare(`\n    INSERT INTO runs (run_id, user_id, started_at, horizon_start, horizon_end, stats_json)\n    VALUES (?1, ?2, ?3, ?4, ?5, ?6)\n  `).bind(runId, userId, nowIso(), horizonStart.toISOString(), horizonEnd.toISOString(), JSON.stringify({ scheduled })).run();\n\n  return new Response(JSON.stringify({ runId, stats: { scheduled } }), { headers: { 'Content-Type':'application/json' } });\n};\n", "import { Env } from \"../../lib/session\";\n\n// Cron schedule is set in Cloudflare Pages project settings.\n// This placeholder counts users; for MVP we use the UI \"Reshuffle now\" button.\n\nexport const onRequestGet: PagesFunction<Env> = async ({ env }) => {\n  const users = await env.DB.prepare('SELECT id FROM users').all();\n  const total = (users.results || []).length;\n  return new Response(JSON.stringify({ total, note: \"Use the UI Reshuffle button for now; wire cron later if desired.\" }), {\n    headers: { 'Content-Type': 'application/json' }\n  });\n};\n", "import { onRequestGet as __oauth_google_callback_ts_onRequestGet } from \"/Users/jvarhol2/Documents/calweaver/functions/oauth/google/callback.ts\"\nimport { onRequestGet as __oauth_google_start_ts_onRequestGet } from \"/Users/jvarhol2/Documents/calweaver/functions/oauth/google/start.ts\"\nimport { onRequestDelete as __api_byok_ts_onRequestDelete } from \"/Users/jvarhol2/Documents/calweaver/functions/api/byok.ts\"\nimport { onRequestPost as __api_byok_ts_onRequestPost } from \"/Users/jvarhol2/Documents/calweaver/functions/api/byok.ts\"\nimport { onRequestGet as __api_me_ts_onRequestGet } from \"/Users/jvarhol2/Documents/calweaver/functions/api/me.ts\"\nimport { onRequestGet as __api_preferences_ts_onRequestGet } from \"/Users/jvarhol2/Documents/calweaver/functions/api/preferences.ts\"\nimport { onRequestPost as __api_preferences_ts_onRequestPost } from \"/Users/jvarhol2/Documents/calweaver/functions/api/preferences.ts\"\nimport { onRequestPost as __api_run_ts_onRequestPost } from \"/Users/jvarhol2/Documents/calweaver/functions/api/run.ts\"\nimport { onRequestGet as __cron_daily_ts_onRequestGet } from \"/Users/jvarhol2/Documents/calweaver/functions/cron/daily.ts\"\n\nexport const routes = [\n    {\n      routePath: \"/oauth/google/callback\",\n      mountPath: \"/oauth/google\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__oauth_google_callback_ts_onRequestGet],\n    },\n  {\n      routePath: \"/oauth/google/start\",\n      mountPath: \"/oauth/google\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__oauth_google_start_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/byok\",\n      mountPath: \"/api\",\n      method: \"DELETE\",\n      middlewares: [],\n      modules: [__api_byok_ts_onRequestDelete],\n    },\n  {\n      routePath: \"/api/byok\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_byok_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/me\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_me_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/preferences\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_preferences_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/preferences\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_preferences_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/run\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_run_ts_onRequestPost],\n    },\n  {\n      routePath: \"/cron/daily\",\n      mountPath: \"/cron\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__cron_daily_ts_onRequestGet],\n    },\n  ]", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/opt/homebrew/lib/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/opt/homebrew/lib/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/jvarhol2/Documents/calweaver/.wrangler/tmp/bundle-EDMqXX/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/jvarhol2/Documents/calweaver/.wrangler/tmp/bundle-EDMqXX/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/jvarhol2/Documents/calweaver/.wrangler/tmp/bundle-EDMqXX/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/jvarhol2/Documents/calweaver/.wrangler/tmp/pages-NEBjwN/functionsWorker-0.14416446490543666.mjs\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/jvarhol2/Documents/calweaver/.wrangler/tmp/pages-NEBjwN/functionsWorker-0.14416446490543666.mjs\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/jvarhol2/Documents/calweaver/.wrangler/tmp/bundle-Wv5855/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/jvarhol2/Documents/calweaver/.wrangler/tmp/bundle-Wv5855/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/jvarhol2/Documents/calweaver/.wrangler/tmp/bundle-Wv5855/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["__name", "b64ToBytes", "onRequestGet", "onRequestPost", "value", "_a", "result", "char", "prefix", "i", "drainBody", "middleware_ensure_req_body_drained_default", "reduceError", "jsonError", "middleware_miniflare3_json_error_default", "__INTERNAL_WRANGLER_MIDDLEWARE__", "middleware_ensure_req_body_drained_default", "middleware_miniflare3_json_error_default", "middleware_insertion_facade_default", "__facade_middleware__", "__facade_register__", "__facade_invokeChain__", "__facade_invoke__", "__facade_middleware__", "__Facade_ScheduledController__", "___Facade_ScheduledController__", "wrapExportedHandler", "__INTERNAL_WRANGLER_MIDDLEWARE__", "__facade_register__", "__facade_invoke__", "wrapWorkerEntrypoint", "WRAPPED_ENTRY", "middleware_insertion_facade_default", "middleware_loader_entry_default"]
}
